server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/UserService
    username: root
    password: Admin@123
    driver-class-name: com.mysql.jdbc.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
  config:
    import: configserver:http://localhost:8085


#addding then spring security for octa
  application:
    name: USER-SERVICE
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-81056919.okta.com/oauth2/default
      client:
        registration:          #registration name en bekaradru hako
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: 0oa9lf0mzwkgNSLYD5d7
            client-secret: qrVaoYdtBXCFIQOkBaKV9Nf3CyP0jx-pXcvgfCdA

        provider:
          okta:
            issuerUri: https://dev-81056919.okta.com/oauth2/default








#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

#resilience4j configurations

management:
  health:
    circuitbreakers:
      enabled: true

  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: ALWAYS

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker :
        registerHealthIndicator: true
        eventConsumerBufferSize : 10
        failureRateThreshold : 50
        minimumNumberOfCalls : 5
        automaticTransitionFromOpenToHalfOpenEnabled : true
        waitDurationInOpenState : 5s
        permittedNumberOfCallsInHalfOpenState : 3
        slidingWindowSize: 10
        slidingWindowType : COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 1
        timeoutDuration: 2s


#okta configuration
#and need to configure spring security
#client registration name en bekara kodbodu


okta:
  oauth2:
    issuer: https://dev-81056919.okta.com/oauth2/default
    audience: api://default


#note: spring security for okta is defined above, api gateway act as a client for other micoservice

#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: https://dev-81056919.okta.com/oauth2/default
#      client:
#        registration:          #registration name en bekaradru hako
#          my-internal-client:
#            provider: okta
#            authorizationGrantType: client_credentials
#            scope: internal
#            clientId: 0oa9lf0mzwkgNSLYD5d7
#            client-secret: qrVaoYdtBXCFIQOkBaKV9Nf3CyP0jx-pXcvgfCdA
#
#        provider:
#          okta:
#            issuerUri: https://dev-81056919.okta.com/oauth2/default














